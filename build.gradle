plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    id "org.sonarqube" version "3.4.0.2513"
}

group = 'io.regent'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.apache.commons:commons-lang3:3.12.0")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("com.google.code.findbugs:jsr305:3.0.2")
    compileOnly("org.projectlombok:lombok")
    runtimeOnly("mysql:mysql-connector-java")
    annotationProcessor("org.projectlombok:lombok")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:mysql")
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

def paths = new HashSet<>()

rootProject.subprojects.forEach(p -> {
    paths.add("${p.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
})

sonarqube {
    properties {
        property "sonar.projectKey", "BookCrudDemoApp"
        property "sonar.organization", "codewithwinnie"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.branch.name", "develop"
        property "sonar.coverage.jacoco.xmlReportPaths", paths
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
